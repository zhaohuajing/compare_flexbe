// generated from rosidl_adapter/resource/action.idl.em
// with input from flexbe_msgs/action/BehaviorInput.action
// generated code does not contain a copyright notice


module flexbe_msgs {
  module action {
    module BehaviorInput_Goal_Constants {
      @verbatim (language="comment", text=
        "Basic types (used by input_action_server, but otherwise optional)" "\n"        "Single integer value")
      const uint8 REQUEST_INT = 0;
      @verbatim (language="comment", text=
        "Float")
      const uint8 REQUEST_FLOAT = 1;
      @verbatim (language="comment", text=
        "List of 2 floats")
      const uint8 REQUEST_2D = 2;
      @verbatim (language="comment", text=
        "List of 3 floats")
      const uint8 REQUEST_3D = 3;
      @verbatim (language="comment", text=
        "List of 4 floats (e.g. quaternion)")
      const uint8 REQUEST_4D = 4;
      @verbatim (language="comment", text=
        "Geometry message pose")
      const uint8 REQUEST_POSE = 10;
      @verbatim (language="comment", text=
        "Geometry message pose stamped")
      const uint8 REQUEST_POSE_STAMPED = 11;
      @verbatim (language="comment", text=
        "String")
      const uint8 REQUEST_STRING = 12;
      @verbatim (language="comment", text=
        "Select from among items in list")
      const uint8 REQUEST_SELECTION = 13;
    };
    @verbatim (language="comment", text=
      "If desired, custom request types can be defined and chosen here")
    struct BehaviorInput_Goal {
      uint8 request_type;

      @verbatim (language="comment", text=
        "Request message displayed to the operator" "\n"
        "Provide context information, i.e. for which purpose the data is required.")
      string msg;

      @verbatim (language="comment", text=
        "List of items for selection (used only by REQUEST_SELECTION )")
      sequence<string> items;
    };
    module BehaviorInput_Result_Constants {
      const uint8 RESULT_OK = 0;
      const uint8 RESULT_FAILED = 1;
      const uint8 RESULT_ABORTED = 2;
    };
    struct BehaviorInput_Result {
      @verbatim (language="comment", text=
        "Indicates if the request has been successful")
      uint8 result_code;

      @verbatim (language="comment", text=
        "Serialized data which was requested" "\n"
        "In case of result_code != RESULT_OK, this field will contain unserialized data regarding the reason of failure instead.")
      string data;
    };
    struct BehaviorInput_Feedback {
      uint8 structure_needs_at_least_one_member;
    };
  };
};
