// generated from rosidl_adapter/resource/srv.idl.em
// with input from compare_flexbe_utilities/srv/EuclideanClustering.srv
// generated code does not contain a copyright notice

#include "geometry_msgs/msg/PoseStamped.idl"
#include "pcl_msgs/msg/PointIndices.idl"
#include "sensor_msgs/msg/PointCloud2.idl"

module compare_flexbe_utilities {
  module srv {
    struct EuclideanClustering_Request {
      sensor_msgs::msg::PointCloud2 input;

      geometry_msgs::msg::PoseStamped camera_pose;

      @verbatim (language="comment", text=
        "meters (e.g., 0.015â€“0.03 typical)")
      float cluster_tolerance;

      @verbatim (language="comment", text=
        "e.g., 100")
      int32 min_cluster_size;

      @verbatim (language="comment", text=
        "e.g., 25000")
      int32 max_cluster_size;
    };
    struct EuclideanClustering_Response {
      pcl_msgs::msg::PointIndices target_cluster_indices;

      sequence<pcl_msgs::msg::PointIndices> obstacle_cluster_indices;
    };
  };
};
